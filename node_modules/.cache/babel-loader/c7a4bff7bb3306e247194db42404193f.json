{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItem: (state, action) => {\n      const item = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity += 1;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItem: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItem","state","action","item","payload","existingItem","find","id","newItem","push","itemId","price","quantity","totalPrice","title","removeItem","filter","cartActions","actions"],"sources":["C:/Users/hunct/Desktop/advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const item = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity += 1;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE;EAFH,CAFc;EAM5BC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBH,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYC,OAAO,CAACD,EAA/C,CAArB;;MACA,IAAI,CAACF,YAAL,EAAmB;QACjBJ,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;UACfC,MAAM,EAAEF,OAAO,CAACD,EADD;UAEfI,KAAK,EAAEH,OAAO,CAACG,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAEL,OAAO,CAACG,KAJL;UAKfG,KAAK,EAAEN,OAAO,CAACM;QALA,CAAjB;MAOD,CARD,MAQO;QACLT,YAAY,CAACO,QAAb,IAAyB,CAAzB;QACAP,YAAY,CAACQ,UAAb,IAA2BL,OAAO,CAACG,KAAnC;MACD;IACF,CAhBO;IAiBRI,UAAU,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB;MAC7B,MAAMK,EAAE,GAAGL,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBH,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAvC,CAArB;;MACA,IAAIF,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;QAC/BX,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAoBb,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAzC,CAAd;MACD,CAFD,MAEO;QACLF,YAAY,CAACO,QAAb;QACAP,YAAY,CAACQ,UAAb,IAA2BR,YAAY,CAACM,KAAxC;MACD;IACF;EA1BO;AANkB,CAAD,CAA7B;AAoCA,OAAO,MAAMM,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAf"},"metadata":{},"sourceType":"module"}